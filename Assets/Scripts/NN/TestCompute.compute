#pragma kernel KernelA
#pragma kernel KernelB
#pragma kernel Max

RWStructuredBuffer<float> buffer;
RWStructuredBuffer<float> read_buffer;
unsigned int row_size;

[numthreads(32, 1, 1)]
void Max(uint3 id : SV_DispatchThreadID)
{
    float max = 0.0f;
    for (int i = 0; i < row_size; ++i)
    {
        const float current_val = buffer[id.x * row_size + i];
        if (max > current_val) continue;

        max = current_val;
    }

    read_buffer[id.x] = max;
}

[numthreads(8, 8, 1)]
void KernelA(uint3 id : SV_DispatchThreadID)
{
    //buffer[id.x] += -3;
    if (id.y >= row_size)
        return;
    
    if(id.x != 0) return;
    read_buffer[id.y] = exp(-0.54689f);
}

void test_function(const int index, RWStructuredBuffer<float> b_1, const RWStructuredBuffer<int> b_2);

[numthreads(8, 8, 1)]
void KernelB(uint3 id : SV_DispatchThreadID)
{
    // //buffer[id.x] += 2;
    // //read_buffer[id.x] = buffer[id.x] * 2;
    //
    // if(id.x > 3 || id.y > 0) return;
    // //read_buffer[id.x] = 4;
    // for (int i = 0; i < 4; ++i)
    // {
    //     InterlockedAdd(read_buffer[i], 1);
    //     //InterlockedAdd(buffer[0], 1);
    //    //read_buffer[i] += 1;
    // }
    //
    // buffer[0] = 5;
    // GroupMemoryBarrierWithGroupSync();
    // buffer[1] = buffer[0] * buffer[15];
    // // const float tt = -0.54442121213476;
    // // buffer[0] = tt * tt * tt * tt * tt * tt;
    // // buffer[1] = pow(tt, 6);
    // read_buffer[0] = 4;
    // test_function(0, buffer, read_buffer);
}

void test_function(const int index, RWStructuredBuffer<float> b_1, const RWStructuredBuffer<int> b_2)
{
    b_1[index] = b_2[index] + 6;
}


